# Define path to cache and memory zone. The memory zone should be unique.
# keys_zone=_domain_name_:100m creates the memory zone and sets the maximum size in MBs.
# inactive=60m will remove cached items that haven't been accessed for 60 minutes or more.
fastcgi_cache_path /home/robot/cache/_domain_name_/ levels=1:2 keys_zone=_domain_name_:100m inactive=60m;

server {
  # Ports to listen on, uncomment one.
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;

  # Server name to listen for
  server_name _domain_name_;

  # Path to document root
  root /home/robot/www/_domain_name_;

  # Paths to certificate files.
  ssl_certificate /etc/letsencrypt/live/_domain_name_/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/_domain_name_/privkey.pem;

	# File to be used as index
	index index.php;

  # Overrides logs defined in nginx.conf, allows per site logs.
  access_log /home/robot/logs/_domain_name_.access.log;
  error_log /home/robot/logs/_domain_name_.error.log;

  # Default server block rules
  include global/server/defaults.conf;

  # Fastcgi cache rules
  include global/server/fastcgi-cache.conf;

  # SSL rules
  include global/server/ssl.conf;

  location / {
  try_files $uri $uri/ /index.php?$args;
    # RankMath SEO Sitemaps - Remove this section if using a different SEO plugin
    location ~ sitemap.*\.x(m|s)l$ {
        rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
        rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
        rewrite ^/([a-z]+)?-sitemap\.xsl$ /index.php?xsl=$1 last;
    }
  }

  location ~ \.php$ {
    try_files $uri =404;
    include global/fastcgi-params.conf;

    # Use the php pool defined in the upstream variable.
    # See global/php-pool.conf for definition.
    fastcgi_pass $upstream;

    # Skip cache based on rules in global/server/fastcgi-cache.conf.
    fastcgi_cache_bypass $skip_cache;
    fastcgi_no_cache $skip_cache;

    # Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
    fastcgi_cache _domain_name_;

    # Define caching time.
    fastcgi_cache_valid 60m;
  }
}

# Redirect http to https
server {
  listen 80;
  listen [::]:80;
  server_name _domain_name_ www._domain_name_;

  return 301 https://_domain_name_$request_uri;
}

# Redirect www to non-www
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  ssl_certificate /etc/letsencrypt/live/_domain_name_/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/_domain_name_/privkey.pem;
  server_name www._domain_name_;

  return 301 https://_domain_name_$request_uri;
}
